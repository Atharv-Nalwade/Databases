
FOREIGN KEY
  Foreign key is used to maintain a link between two or more tables
  
   A FOREIGN KEY is a field (or collection of fields) in one table, that refers to the PRIMARY KEY in another table.

   The table with the foreign key is called the child table, and the table with the primary key is called the referenced or parent table.
   
   SYNTAX:
      CREATE TABLE Orders (
      OrderID int NOT NULL,
      OrderNumber int NOT NULL,
      PersonID int,
      PRIMARY KEY (OrderID),
      FOREIGN KEY (PersonID) REFERENCES Persons(PersonID)   the field/col PersonID references to the Persons table and PersonsID col
      );
      ---> what fk does it it only allows insertion of PersonID into Orders which are alreday presnt in Persons table under PersonsID 
      
      -- This INSERT fails because of our fk constraint.  No user with id: 98
                  INSERT INTO orders (order_date, amount, customer_id)
                  VALUES ('2016/06/06', 33.67, 98);
                  
                  
 
 CROSS JOIN 
 --- It is cartesian prosuct of table1 rows with table 2 rows i.r for every table2 rows all values are of tb1 are avilable simply every row of tbl2 is associated with e      every row in tbl1
 --- It is cross multiplication or all possible combinations
 --- it has tbl1*tbl2 rows in output 
 --- It is useful when id of tb1 and idx of tbl2 are same that menas there is a match hence we can use that
 ----     SELECT * 
          FROM table1 
          CROSS JOIN table2;
          
 ---  select * from customers,orders;
        +----+------------+-----------+------------------+----+------------+--------+-------------+
        | id | first_name | last_name | email            | id | order_date | amount | customer_id |
        +----+------------+-----------+------------------+----+------------+--------+-------------+
        |  5 | Bette      | Davis     | bette@aol.com    |  1 | 2016-02-10 |  99.99 |           1 |   id=1 with all rows of tbl1
        |  4 | Blue       | Steele    | blue@gmail.com   |  1 | 2016-02-10 |  99.99 |           1 |
        |  3 | David      | Bowie     | david@gmail.com  |  1 | 2016-02-10 |  99.99 |           1 |
        |  2 | George     | Michael   | gm@gmail.com     |  1 | 2016-02-10 |  99.99 |           1 |
        |  1 | Boy        | George    | george@gmail.com |  1 | 2016-02-10 |  99.99 |           1 |
        |  5 | Bette      | Davis     | bette@aol.com    |  2 | 2017-11-11 |  35.50 |           1 |  
        |  4 | Blue       | Steele    | blue@gmail.com   |  2 | 2017-11-11 |  35.50 |           1 |
        |  3 | David      | Bowie     | david@gmail.com  |  2 | 2017-11-11 |  35.50 |           1 |
        |  2 | George     | Michael   | gm@gmail.com     |  2 | 2017-11-11 |  35.50 |           1 |
        |  1 | Boy        | George    | george@gmail.com |  2 | 2017-11-11 |  35.50 |           1 |
        |  5 | Bette      | Davis     | bette@aol.com    |  3 | 2014-12-12 | 800.67 |           2 |   id=2 with all rows of tbl1
        |  4 | Blue       | Steele    | blue@gmail.com   |  3 | 2014-12-12 | 800.67 |           2 |
        |  3 | David      | Bowie     | david@gmail.com  |  3 | 2014-12-12 | 800.67 |           2 |
        |  2 | George     | Michael   | gm@gmail.com     |  3 | 2014-12-12 | 800.67 |           2 |
        |  1 | Boy        | George    | george@gmail.com |  3 | 2014-12-12 | 800.67 |           2 |
        |  5 | Bette      | Davis     | bette@aol.com    |  4 | 2015-01-03 |  12.50 |           2 |   
        |  4 | Blue       | Steele    | blue@gmail.com   |  4 | 2015-01-03 |  12.50 |           2 |     These id show which customer with given id has bought it
        |  3 | David      | Bowie     | david@gmail.com  |  4 | 2015-01-03 |  12.50 |           2 |
        |  2 | George     | Michael   | gm@gmail.com     |  4 | 2015-01-03 |  12.50 |           2 |
        |  1 | Boy        | George    | george@gmail.com |  4 | 2015-01-03 |  12.50 |           2 |
        |  5 | Bette      | Davis     | bette@aol.com    |  5 | 1999-04-11 | 450.25 |           5 |   id=5 with all rows of tbl1
        |  4 | Blue       | Steele    | blue@gmail.com   |  5 | 1999-04-11 | 450.25 |           5 |
        |  3 | David      | Bowie     | david@gmail.com  |  5 | 1999-04-11 | 450.25 |           5 |
        |  2 | George     | Michael   | gm@gmail.com     |  5 | 1999-04-11 | 450.25 |           5 |
        |  1 | Boy        | George    | george@gmail.com |  5 | 1999-04-11 | 450.25 |           5 |
        |  5 | Bette      | Davis     | bette@aol.com    |  7 | 2022-08-31 |  23.96 |           5 |
        |  4 | Blue       | Steele    | blue@gmail.com   |  7 | 2022-08-31 |  23.96 |           5 |
        |  3 | David      | Bowie     | david@gmail.com  |  7 | 2022-08-31 |  23.96 |           5 |
        |  2 | George     | Michael   | gm@gmail.com     |  7 | 2022-08-31 |  23.96 |           5 |
        |  1 | Boy        | George    | george@gmail.com |  7 | 2022-08-31 |  23.96 |           5 |
        +----+------------+-----------+------------------+----+------------+--------+-------------+
      
       rows with same value of id and customer_id are our desired result
       
       
       Sample table: foods


--------------------------------------------------------------------------------------------------------------------------------------------------------------------


To get item name and item unit columns from foods table and company name, company city columns from company table, after a CROSS JOINING with these mentioned tables, the following SQL statement can be used:

SQL Code:

SELECT foods.item_name,foods.item_unit,
company.company_name,company.company_city 
FROM foods 
CROSS JOIN company;
or

SQL Code:

SELECT foods.item_name,foods.item_unit,
company.company_name,company.company_city 
FROM foods,company;
How cross joining happend into two tables

Sql cross join into two tables
Output:

ITEM_NAME       ITEM_UNIT  COMPANY_NAME    COMPANY_CITY
--------------- ---------- --------------- ---------------
Chex Mix        Pcs        Order All       Boston
Cheez-It        Pcs        Order All       Boston
BN Biscuit      Pcs        Order All       Boston
Mighty Munch    Pcs        Order All       Boston
Pot Rice        Pcs        Order All       Boston
Jaffa Cakes     Pcs        Order All       Boston
Salt n Shake    Pcs        Order All       Boston
Chex Mix        Pcs        Jack Hill Ltd   London
Cheez-It        Pcs        Jack Hill Ltd   London
BN Biscuit      Pcs        Jack Hill Ltd   London
Mighty Munch    Pcs        Jack Hill Ltd   London
Pot Rice        Pcs        Jack Hill Ltd   London
Jaffa Cakes     Pcs        Jack Hill Ltd   London
Salt n Shake    Pcs        Jack Hill Ltd   London
Chex Mix        Pcs        Akas Foods      Delhi
Cheez-It        Pcs        Akas Foods      Delhi
BN Biscuit      Pcs        Akas Foods      Delhi
Mighty Munch    Pcs        Akas Foods      Delhi
Pot Rice        Pcs        Akas Foods      Delhi
Jaffa Cakes     Pcs        Akas Foods      Delhi
Salt n Shake    Pcs        Akas Foods      Delhi
Chex Mix        Pcs        Foodies.        London
.........

-------------------------------------------------------------------------------------------------------------------------------------------------------------------

While doing it we have a problem of id field is common in both tables hence to reolve that in where cluase we use tbl_name.<col_name>
tbl name followed by dot followed by name of col to select while jppining

------------------------------------------------------------------------------------------------------------------------------------------------------------------


INNER JOIN

 ---     The INNER JOIN keyword selects records that have matching values in both tables.

 ---     INNER JOIN Syntax
         SELECT column_name(s)
         FROM table1
         INNER JOIN table2
         ON table1.column_name = table2.column_name;
         SQL INNER JOIN

 ---  Select all the data wher ethe join condition is met 
 --- if set a and set b the inner join is intersection of two sets
 
--------------------------------------------------------------------------------------------------------------------------------------------------------------------

